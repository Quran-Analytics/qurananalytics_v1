kahf_maryam = rbind(kahf,maryam)
corp <- corpus(kahf_maryam$text)
docvars(corp, "surah") <- c(rep("kahf",110),rep("maryam",98))
dfmat2 <- dfm(corp, remove = stop_words$word, groups = "surah",
remove_punct = TRUE)
ndoc(corp)
docvars(corp,"surah")
length(docvars(corp,"surah"))
dfm(corp)
dfm(corp, remove = stop_words$word)
dfm(corp, remove = stop_words$word, groups = "surah")
kahf_maryam = rbind(kahf,maryam)
corp <- corpus(kahf_maryam$text)
docvars(corp, "surah") <- c(rep("kahf",110),rep("maryam",98))
dfmat2 <- dfm(corp, remove = stop_words$word, dfm_group = "surah",
remove_punct = TRUE)
tstat2 <- textstat_keyness(dfmat2, target = "kahf", measure = "lr")
docnames(dfmat2)
tstat2 <- textstat_keyness(dfmat2, measure = "lr")
textplot_keyness(tstat2, color = c("steelblue", "tomato"), n = 20)
kahf_maryam = rbind(kahf,maryam)
corp <- corpus(kahf_maryam$text)
docvars(corp, "surah") <- c(rep("kahf",110),rep("maryam",98))
dfmat2 <- dfm(corp, remove = stop_words$word, dfm_group = "surah",
remove_punct = TRUE)
tstat2 <- textstat_keyness(dfmat2, measure = "lr") # target = "kahf", measure = "lr")
textplot_keyness(tstat2, color = c("steelblue", "tomato"), n = 20)
kahf_lexdiv = textstat_lexdiv(dfm_kahf, measure = "all")
maryam_lexdiv = textstat_lexdiv(dfm_maryam, measure = "all" )
p1 = ggplot() + geom_point(aes(x = 1:nrow(kahf_lexdiv),
y = kahf_lexdiv$R),
color = "steelblue",
show.legend = FALSE) +
labs(x = "Surah Al-Kahf verses", y = "lexical diversity score")
p2 = ggplot() + geom_point(aes(x = 1:nrow(maryam_lexdiv),
y = maryam_lexdiv$R),
color = "tomato",
show.legend = FALSE) +
labs(x = "Surah Maryam verses", y = "lexical diversity score")
cowplot::plot_grid(p1,p2, nrow = 1)
textplot_xray(kwic(corp, pattern = "allah"), kwic(corp, pattern = "lord"),
scale = "absolute") +
aes(color = keyword) +
scale_color_manual(values = c("darkblue", "darkred")) +
theme(legend.position = "none")
tstcor_kahf = textstat_simil(dfm_kahf, y = NULL,
margin = "documents",
method = "correlation")
tstcor_kahf = as.data.frame(tstcor_kahf)
tstcor_kahf = tstcor_kahf %>% filter(correlation > 0)
tstcos_kahf = textstat_simil(dfm_kahf, y = NULL,
margin = "documents",
method = "cosine")
tstcos_kahf = as.data.frame(tstcos_kahf)
tstjac_kahf = textstat_simil(dfm_kahf, y = NULL,
margin = "documents",
method = "jaccard")
tstjac_kahf = as.data.frame(tstjac_kahf)
ggplot() +
geom_point(aes(x = c(1:1886), y = tstcor_kahf$correlation), color = "red") +
geom_point(aes(x = c(1:1886), y = tstcos_kahf$cosine), color = "blue") +
geom_point(aes(x = (1:1886), y = tstjac_kahf$jaccard), color = "green") +
labs(x = "edges", y = "similarity score")
tstcor_kahf = textstat_simil(dfm_kahf, y = NULL,
margin = "documents",
method = "correlation")
tstcor_kahf = as.data.frame(tstcor_kahf)
tstcor_kahf = tstcor_kahf %>% filter(correlation > 0)
tstcos_kahf = textstat_simil(dfm_kahf, y = NULL,
margin = "documents",
method = "cosine")
tstcos_kahf = as.data.frame(tstcos_kahf)
tstjac_kahf = textstat_simil(dfm_kahf, y = NULL,
margin = "documents",
method = "jaccard")
tstjac_kahf = as.data.frame(tstjac_kahf)
ggplot() +
geom_point(aes(x = c(1:1886), y = tstcor_kahf$correlation), color = "red") +
geom_point(aes(x = c(1:1886), y = tstcos_kahf$cosine), color = "blue") +
geom_point(aes(x = (1:1886), y = tstjac_kahf$jaccard), color = "green") +
labs(x = "edges", y = "similarity score")
ggplot() +
geom_point(aes(x = c(1:1886), y = tstcor_kahf$correlation), color = "red") +
geom_point(aes(x = c(1:1886), y = tstcos_kahf$cosine), color = "blue") +
geom_point(aes(x = (1:1886), y = tstjac_kahf$jaccard), color = "green") +
labs(x = "edges", y = "similarity score")
ggplot() +
geom_point(aes(x = c(1:1886), y = tstcor_kahf$correlation), color = "red") +
geom_point(aes(x = c(1:1886), y = tstcos_kahf$cosine), color = "blue") +
geom_point(aes(x = c(1:1886), y = tstjac_kahf$jaccard), color = "green") +
labs(x = "edges", y = "similarity score")
tstcor_kahf = textstat_simil(dfm_kahf, y = NULL,
margin = "documents",
method = "correlation")
tstcor_kahf = as.data.frame(tstcor_kahf)
tstcor_kahf = tstcor_kahf %>% filter(correlation > 0)
tstcos_kahf = textstat_simil(dfm_kahf, y = NULL,
margin = "documents",
method = "cosine")
tstcos_kahf = as.data.frame(tstcos_kahf)
tstjac_kahf = textstat_simil(dfm_kahf, y = NULL,
margin = "documents",
method = "jaccard")
tstjac_kahf = as.data.frame(tstjac_kahf)
ggplot() +
geom_point(aes(x = c(1:943), y = tstcor_kahf$correlation), color = "red") +
geom_point(aes(x = c(1:943), y = tstcos_kahf$cosine), color = "blue") +
geom_point(aes(x = c(1:943), y = tstjac_kahf$jaccard), color = "green") +
labs(x = "edges", y = "similarity score")
tstcos_kahf$document1 = str_replace(tstcos_kahf$document1,"text","")
tstcos_kahf$document2 = str_replace(tstcos_kahf$document2,"text","")
igph_kahfcos = graph_from_data_frame(tstcos_kahf %>%
filter(cosine > 0.25))
ggraph(igph_kahfcos, layout = "kk") +
geom_edge_link(aes(width = cosine, edge_alpha = cosine),
edge_color = "steelblue") +
geom_node_point(size = 0.1, shape = 1, color = "black") +
geom_node_text(aes(label = name), col = "black", size = 4)
tstcor_maryam = textstat_simil(dfm_maryam, y = NULL,
margin = "documents",
method = "correlation")
tstcor_maryam = as.data.frame(tstcor_maryam)
tstcor_maryam = tstcor_maryam %>% filter(correlation > 0)
tstcos_maryam = textstat_simil(dfm_maryam, y = NULL,
margin = "documents",
method = "cosine")
tstcos_maryam = as.data.frame(tstcos_maryam)
tstjac_maryam = textstat_simil(dfm_maryam, y = NULL,
margin = "documents",
method = "jaccard")
tstjac_maryam = as.data.frame(tstjac_maryam)
ggplot() +
geom_point(aes(x = c(1:nrow(tstcor_maryam)), y = tstcor_maryam$correlation), color = "red") +
geom_point(aes(x = c(1:nrow(tstcos_maryam)), y = tstcos_maryam$cosine), color = "blue") +
geom_point(aes(x = (1:nrow(tstjac_maryam)), y = tstjac_maryam$jaccard), color = "green") +
labs(x = "edges", y = "similarity score")
tstcos_maryam$document1 = str_replace(tstcos_maryam$document1,"text","")
tstcos_maryam$document2 = str_replace(tstcos_maryam$document2,"text","")
igph_maryamcos = graph_from_data_frame(tstcos_maryam %>% filter(cosine >0.25))
Links = igraph::degree(igph_maryamcos)
ggraph(igph_maryamcos, layout = "kk") +
geom_edge_link(aes(width = cosine, edge_alpha = cosine), edge_color = "tomato") +
geom_node_point(size = 0.1, shape = 1, color = "black") +
geom_node_text(aes(label = name), col = "black", size = 4)
tstdis_kahf = textstat_dist(dfm_kahf, y = NULL,
margin = "documents",
method = "manhattan")
tstdis_kahf = as.data.frame(tstdis_kahf)
ggplot() + geom_point(
aes(x = c(1:nrow(tstdis_kahf)),
y = scale(tstdis_kahf$manhattan, scale = F)),
color = "aquamarine2") +
labs(x = "edges", y = "distance score")
tstdis_kahf$document1 = str_replace(tstdis_kahf$document1,"text","")
tstdis_kahf$document2 = str_replace(tstdis_kahf$document2,"text","")
igph_maryamcos = graph_from_data_frame(tstdis_kahf %>% filter(scale(manhattan, scale = F) >15))
ggraph(igph_maryamcos, layout = "kk") +
geom_edge_link(aes(width = manhattan, edge_alpha = manhattan), edge_color = "aquamarine2") +
geom_node_point(size = 0.1, shape = 1, color = "black") +
geom_node_text(aes(label = name), col = "black", size = 4)
bookdown::pdf_book("00-index.Rmd","bookdown::pdf_book")
bookdown::render_book("00-index.Rmd","bookdown::pdf_book")
install.packages("tinytex")
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
bookdown::render_book("00-index.Rmd","bookdown::pdf_book")
bookdown::render_book("00-index.Rmd","bookdown::pdf_book")
tinytex::reinstall_tinytex()
tinytex::reinstall_tinytex()
tinytex::reinstall_tinytex()
bookdown::render_book("00-index.Rmd","bookdown::pdf_book")
tinytex::reinstall_tinytex()
tinytex::reinstall_tinytex()
tinytex::tlmgr_update()
tinytex::tlmgr_install()
tinytex::tlmgr_update()
tinytex::tlmgr_update()
tinytex::check_installed()
tinytex::is_tinytex()
install.packages("tinytex")
tinytex::is_tinytex()
tinytex::tlmgr_update()
tinytex::tlmgr()
bookdown::render_book("00-index.Rmd","bookdown::html_book")
tinytex::is_tinytex()
tinytex::tlmgr_update()
tinytex::is_tinytex()
install.packages("tinytex")
tinytex::is_tinytex()
tinytex::tlmgr_update()
bookdown::render_book("00-index.Rmd","bookdown::pdf_book")
bookdown::render_book("00-index.Rmd","bookdown::pdf_book")
bookdown::render_book("00-index.Rmd","bookdown::gitbook")
bookdown::render_book("00-index.Rmd","bookdown::gitbook")
bookdown::render_book("00-index.Rmd","bookdown::pdf_book")
tinytex::tlmgr_version()
tinytex::tlmgr_install()
tinytex::tlmgr_version()
tinytex::tlmgr_update()
tinytex::is_tinytex()
tinytex::install_tinytex()
bookdown::render_book("00-index.Rmd","bookdown::pdf_book")
bookdown::render_book("00-index.Rmd","bookdown::pdf_book")
library(tidyverse)
library(tidytext)
library(readr)
library(quRan)
library(ggplot2)
quran_all = read_csv("data/quran_trans.csv") %>%
select(surah_id, ayah_id, surah_title_en,
surah_title_en_trans, revelation_type,
ayah_title,
malay,saheeh,yusufali)
View(quran_all)
tidyESI <- quran_all %>%
unnest_tokens(word, saheeh) %>% select(-malay,-yusufali)
View(tidyESI)
surah_wordsESI <- quran_all %>%
unnest_tokens(word, saheeh) %>%
count(surah_title_en, word, sort = TRUE)
View(surah_wordsESI)
View(surah_wordsESI)
View(quran_all)
surah_wordsEYA <- quran_all %>%
unnest_tokens(word, yusufali) %>%
count(surah_title_en, word, sort = TRUE)
surah_wordsMAB <- quran_all %>%
unnest_tokens(word, malay) %>%
count(surah_title_en, word, sort = TRUE)
total_wordsESI <- surah_wordsESI %>%
group_by(surah_title_en) %>% summarize(total = sum(n))
total_wordsEYA <- surah_wordsEYA %>%
group_by(surah_title_en) %>% summarize(total = sum(n))
total_wordsMAB <- surah_wordsMAB %>%
group_by(surah_title_en) %>% summarize(total = sum(n))
bookdown::render_book("00-index.Rmd", "bookdown::pdf_book")
bookdown::render_book("00-index.Rmd", "bookdown::word2_book")
bookdown::render_book("00-index.Rmd", "bookdown::word_document")
bookdown::render_book("00-index.Rmd", "bookdown::word2_book")
bookdown::render_book("00-index.Rmd", "bookdown::word2_book")
bookdown::render_book("00-index.Rmd", "bookdown::word_book")
bookdown::render_book("00-index.Rmd", "bookdown::word_document2")
bookdown::render_book("00-index.Rmd", "bookdown::word_document2")
bookdown::render_book("00-index.Rmd", "bookdown::word_document2")
sessionInfo()
## load all libraries to be used in the book
library(knitr)
if(!knitr:::is_html_output())
{
options("width"=56)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
# knitr::opts_chunk$set(fig.pos = 'H')
}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE, results = 'hide')
extrafont::loadfonts()  # this is required for theme_graph() and some ggraph functions
options(width = 100)
library(tidyverse)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(graphlayouts)
library(quRan)
library(quanteda)
library(readtext)
library(topicmodels)
library(udpipe)
library(textrank)
library(wordcloud)
library(scales)
library(widyr)
library(grid)
library(png)
library(jpeg)
library(quanteda.textmodels)
library(quanteda.textplots) # added new
library(quanteda.textstats) # added new
sessionInfo()
library(knitr)
if(!knitr:::is_html_output())
{
options("width"=56)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
#  knitr::opts_chunk$set(fig.pos = 'H')
}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE)
library(tidyverse)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(graphlayouts)
library(quRan)
library(quanteda)
library(readtext)
library(topicmodels)
library(udpipe)
library(textrank)
library(wordcloud)
library(scales)
library(widyr)
library(grid)
library(png)
library(jpeg)
library(quanteda.textmodels)
library(wordcloud) # added
library(RColorBrewer) # added
library(knitr)
if(!knitr:::is_html_output())
{
options("width"=56)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
#  knitr::opts_chunk$set(fig.pos = 'H')
}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE, results = 'hide')
library(tidyverse)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(graphlayouts)
library(quRan)
library(quanteda)
library(readtext)
library(topicmodels)
library(udpipe)
library(textrank)
library(wordcloud)
library(scales)
library(widyr)
library(grid)
library(png)
library(jpeg)
library(quanteda.textmodels)
library(textdata) # added
library(knitr)
if(!knitr:::is_html_output())
{
options("width"=56)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
#  knitr::opts_chunk$set(fig.pos = 'H')
}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE)
library(tidyverse)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(graphlayouts)
library(quRan)
library(quanteda)
library(readtext)
library(topicmodels)
library(udpipe)
library(textrank)
library(wordcloud)
library(scales)
library(widyr)
library(grid)
library(png)
library(jpeg)
library(quanteda.textmodels)
library(knitr)
if(!knitr:::is_html_output())
{
options("width"=56)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
#  knitr::opts_chunk$set(fig.pos = 'H')
}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE, results = 'hide')
library(tidyverse)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(graphlayouts)
library(quRan)
library(quanteda)
library(readtext)
library(topicmodels)
library(udpipe)
library(textrank)
library(wordcloud)
library(scales)
library(widyr)
library(grid)
library(png)
library(jpeg)
library(quanteda.textmodels)
library(knitr)
if(!knitr:::is_html_output())
{
options("width"=56)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
#  knitr::opts_chunk$set(fig.pos = 'H')
}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE, results = 'hide')
# NOTE: Line chunk NOT EVALUATED DUE TO ERROR IN Igraph
## this ch6fig624
# also package influenceR and seriation is required as dependencies, hence was installed
library(tidyverse)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(graphlayouts)
library(quRan)
library(quanteda)
library(readtext)
library(topicmodels)
library(udpipe)
library(textrank)
library(wordcloud)
library(scales)
library(widyr)
library(grid)
library(png)
library(jpeg)
library(quanteda.textmodels)
library(knitr)
if(!knitr:::is_html_output())
{
options("width"=56)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
#  knitr::opts_chunk$set(fig.pos = 'H')
}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE)
library(tidyverse)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(graphlayouts)
library(quRan)
library(quanteda)
library(readtext)
library(topicmodels)
library(udpipe)
library(textrank)
library(wordcloud)
library(scales)
library(widyr)
library(grid)
library(png)
library(jpeg)
library(quanteda.textmodels)
library(quanteda.textplots)
library(quanteda.textstats) # added new
library(ggtext) # added new
# changes made to
# line 239, 462,505 : igphQ = quanteda.textplots::as.igraph(fcmQ) from quanteda:: without textplots
# line 396, 468,511 : btwnQ = betweennes( ..... nobigint = TRUE, normalized = FALSE) delete" nobigint
if(!knitr:::is_html_output())
{
options("width"=56)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
#  knitr::opts_chunk$set(fig.pos = 'H')
}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE, results = 'hide')
library(tidyverse)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(graphlayouts)
library(quRan)
library(quanteda)
library(readtext)
library(topicmodels)
library(udpipe)
library(textrank)
library(wordcloud)
library(scales)
library(widyr)
library(grid)
library(png)
library(jpeg)
library(quanteda.textmodels)
library(quanteda.textplots) # added new
library(quanteda.textstats) # added new
library(knitr)
if(!knitr:::is_html_output())
{
options("width"=56)
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=56, indent = 2), tidy = TRUE)
#  knitr::opts_chunk$set(fig.pos = 'H')
}
knitr::opts_chunk$set(message = FALSE, warning = FALSE, error = FALSE, results = 'hide')
library(tidyverse)
library(tidytext)
library(ggplot2)
library(igraph)
library(ggraph)
library(graphlayouts)
library(quRan)
library(quanteda)
library(readtext)
library(topicmodels)
library(udpipe)
library(textrank)
library(wordcloud)
library(scales)
library(widyr)
library(grid)
library(png)
library(jpeg)
library(quanteda.textmodels)
library(quanteda.textplots) # added new
library(quanteda.textstats) # added new
sessionInfo()
list.files
list.files()
